apiVersion: apps/v1
kind: Deployment
metadata:
  name: velure-publish-order
  labels:
    app: velure-publish-order
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: velure-publish-order
  template:
    metadata:
      labels:
        app: velure-publish-order
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: publish-order
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PUBLISHER_ORDER_SERVICE_APP_PORT
              value: "{{ .Values.service.port }}"
            - name: ORDER_EXCHANGE
              value: "{{ .Values.order.exchange }}"
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: order-database
                  key: url
            - name: PUBLISHER_RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-conn
                  key: url
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            readOnlyRootFilesystem: true
