# Define o número de réplicas para o Deployment
replicaCount: 1
namespace: authentication

# Configuração da imagem do Docker
image:
  repository: icl00ud/velure-auth-service
  pullPolicy: IfNotPresent
  tag: "0.1.0"

# Segredos para repositórios privados (opcional, vazio para públicos)
imagePullSecrets: []

# Sobrescrever nomes padrão
nameOverride: ""
fullnameOverride: ""

# Configurações da conta de serviço
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Anotações e rótulos personalizados para pods
podAnnotations: {}
podLabels: {}

# Contexto de segurança do Pod
podSecurityContext: {}
securityContext: {}

# Configurações do serviço (ClusterIP expõe o serviço internamente)
service:
  type: ClusterIP
  port: 3020

# Configuração de Ingress (desativado por enquanto)
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: auth.velure.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: velure-auth-tls
      hosts:
        - auth.velure.local

# Recursos de CPU e memória para o container
resources:
  limits:
    cpu: "150m"
    memory: "256Mi"
  requests:
    cpu: "100m"
    memory: "128Mi"

# Probes de liveness e readiness
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Configuração de autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 65

# Volumes adicionais (se necessário)
volumes: []
volumeMounts: []

# Seletores e tolerâncias para nós
nodeSelector: {}
tolerations: []
affinity: {}

# Secrets configuration (use existing secrets or allow creating externally)
secrets:
  postgres:
    existingSecret: ""
  jwt:
    existingSecret: ""
  session:
    existingSecret: ""
