services:
  auth-postgres:
    image: postgres:17-alpine
    container_name: ${AUTH_POSTGRES_HOST}
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DATABASE_NAME}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - auth

  order-postgres:
    image: postgres:17-alpine
    container_name: order_postgres
    restart: always
    environment:
      POSTGRES_DB: ${ORDER_POSTGRES_DATABASE_NAME}
      POSTGRES_USER: ${ORDER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ORDER_POSTGRES_PASSWORD}
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - order

  mongodb:
    image: bitnami/mongodb:8.0.4
    container_name: ${MONGODB_HOST}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DBNAME}
    volumes:
      - mongodb_data:/data/db
      - ./velure-product-service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"

  redis:
    image: redis:7.2.7-alpine
    container_name: redis-products
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_HOST}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "15672:15672"
    networks:
      - order

  publish-order-service:
    build:
      context: ./publish-order-service
      dockerfile: Dockerfile
    container_name: ${PUBLISH_ORDER_SERVICE_HOST}
    restart: always
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
      POSTGRES_HOST: ${ORDER_POSTGRES_HOST}
      POSTGRES_USER: ${ORDER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ORDER_POSTGRES_PASSWORD}
      POSTGRES_DATABASE_NAME: ${ORDER_POSTGRES_DATABASE_NAME}
    ports:
      - "${PUBLISH_ORDER_SERVICE_PORT}:${PUBLISH_ORDER_SERVICE_PORT}"
    networks:
      - order

volumes:
  postgres_auth_data:
  postgres_order_data:
  mongodb_data:
  rabbitmq_data:

networks:
  auth:
    driver: bridge
  order:
    driver: bridge
